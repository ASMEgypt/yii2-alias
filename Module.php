<?php
/**
 */

namespace execut\alias;


use execut\dependencies\PluginBehavior;
use yii\i18n\PhpMessageSource;
use yii\web\Application;

class Module extends \yii\base\Module implements Plugin
{
    public $models = [];
    public function behaviors()
    {
        return [
            [
                'class' => PluginBehavior::class,
                'pluginInterface' => Plugin::class,
            ],
        ];
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->initI18n();
    }

    public function initI18n() {
        $this->module->i18n->translations['execut/alias'] = [
            'class' => PhpMessageSource::class,
            'basePath' => 'vendor/execut/alias/messages',
        ];
    }

    public function getModels() {
        $models = array_merge($this->getPluginsResults(__FUNCTION__), $this->models);
        uasort($models, function ($model1, $model2) {
            if (empty($model1['order'])) {
                return false;
            } else if (empty($model2['order'])) {
                return true;
            } else {
                return $model1['order'] >= $model2['order'];
            }
        });

        $this->attachToTables($models);

        return $models;
    }

    /**
     * @param $models
     */
    protected function attachToTables($models): void
    {
        $tables = [];
        foreach ($models as $params) {
            $modelClass = $params['modelClass'];
            $tables[] = $modelClass::tableName();
        }

        $attacher = new Attacher([
            'tables' => $tables,
        ]);

        $attacher->safeUp();
    }
}